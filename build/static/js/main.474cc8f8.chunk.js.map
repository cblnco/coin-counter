{"version":3,"sources":["components/header/logo.svg","components/coin/Coin.svg","components/mysteryBlock/ActiveBlock.svg","components/mysteryBlock/InactiveBlock.svg","components/header/Header.jsx","components/coin/Coin.jsx","components/coinsLabel/CoinsLabel.jsx","components/mysteryBlock/MysteryBlock.jsx","components/button/Button.jsx","components/counter/Counter.jsx","components/MainContainer.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Header","title","className","src","logo","alt","Coin","props","animation","defaultStyle","classNames","cn","Audio","play","CoinSVG","CoinsLabel","number","padStart","padStr","id","toString","MysteryBlock","active","ActiveBlock","InactiveBlock","Button","children","Counter","removeAnimations","setTimeout","setState","prevState","isMysteryBlockActive","counter","limit","coinAnimation","mysteryBlockAnimation","animationTimeout","handleOnIncreaseClick","state","handleOnDecreaseClick","handleOnButtonClick","event","actionMap","increase","decrease","actionType","target","getAttribute","this","action","onClick","Component","MainContainer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.474cc8f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","module.exports = __webpack_public_path__ + \"static/media/Coin.dddaf5e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/ActiveBlock.f2abd58e.svg\";","module.exports = __webpack_public_path__ + \"static/media/InactiveBlock.f14904cc.svg\";","import React from \"react\";\nimport logo from './logo.svg';\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nconst Header = ({ title }) => (\n  <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"React logo\" />\n    <p className=\"App-paragraph\">{title}</p>\n  </header>\n);\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport CoinSVG from \"./Coin.svg\";\nimport cn from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nconst playCoinFX = () => {\n  const coinFX = new Audio(\n    \"https://themushroomkingdom.net/sounds/wav/smw/smw_coin.wav\"\n  );\n  coinFX.play();\n};\n\nconst Coin = props => {\n  const { animation, defaultStyle, alt, className } = props;\n  const classNames = cn(\n    { \"App-Coin-animation\": animation },\n    { \"App-Coin\": defaultStyle },\n    className\n  );\n\n  if (animation) {\n    playCoinFX();\n  }\n\n  return <img {...props} className={classNames} src={CoinSVG} alt={alt} />;\n};\n\nCoin.propTypes = {\n  aniamtion: PropTypes.bool,\n  defaultStyle: PropTypes.bool,\n  className: PropTypes.string\n};\n\nexport default Coin;\n","import React from \"react\";\nimport Coin from \"../coin/Coin\";\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nconst CoinsLabel = props => {\n  const { number, padStart, padStr } = props;\n  return (\n    <div>\n      <Coin id=\"coin_label_svg\" className=\"App-Coin-label\" alt=\"Coin label\" />\n      <span className=\"App-Coin-label-symbol\">&nbsp;ðŸ—™&nbsp;&nbsp;</span>\n      <span className=\"App-Coin-label-text\">\n        {number.toString().padStart(padStart, padStr)}\n      </span>\n    </div>\n  );\n};\n\nCoinsLabel.propTypes = {\n  padStr: PropTypes.string,\n  number: PropTypes.number.isRequired,\n  padStart: PropTypes.number.isRequired,\n};\n\nexport default CoinsLabel;\n","import React from \"react\";\nimport ActiveBlock from \"./ActiveBlock.svg\";\nimport InactiveBlock from \"./InactiveBlock.svg\";\nimport cn from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nconst playMysteryBlockFX = () => {\n  const mysteryBlockFX = new Audio(\n    \"https://themushroomkingdom.net/sounds/wav/smw/smw_shell_ricochet.wav\"\n  );\n  mysteryBlockFX.play();\n};\n\nconst MysteryBlock = props => {\n  const { animation, active, alt } = props;\n  const classNames = cn(\"App-Mistery-Block\", { \"margin-top\": animation });\n\n  if (animation) {\n    playMysteryBlockFX();\n  }\n\n  return (\n    <img {...props} className={classNames} animation={classNames} src={active ? ActiveBlock : InactiveBlock} alt={alt} />\n  );\n};\n\nMysteryBlock.propTypes = {\n  id: PropTypes.string,\n  alt: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  animation: PropTypes.bool.isRequired\n};\n\nexport default MysteryBlock;\n","import React from \"react\";\nimport cn from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nconst Button = props => {\n  const classNames = cn(\"App-button\", props.className);\n  return (\n    <button {...props} className={classNames}>\n      {props.children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default Button;\n","import React, { Fragment, Component } from \"react\";\nimport CoinsLabel from \"../coinsLabel/CoinsLabel\";\nimport Coin from \"../coin/Coin.jsx\";\nimport MysteryBlock from \"../mysteryBlock/MysteryBlock\";\nimport Button from \"../button/Button\";\nimport PropTypes from \"prop-types\";\nimport \"./style.css\";\n\nclass Counter extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      counter: 0,\n      coinAnimation: false,\n      isMysteryBlockActive: true,\n      mysteryBlockAnimation: false\n    };\n  }\n\n  removeAnimations = () => {\n    setTimeout(\n      () =>\n        this.setState((prevState, props) => ({\n          isMysteryBlockActive: prevState.counter < props.limit,\n          coinAnimation: false,\n          mysteryBlockAnimation: false\n        })),\n      this.props.animationTimeout\n    );\n  };\n\n  handleOnIncreaseClick = () => {\n    debugger\n    if (this.state.counter < this.props.limit) {\n      this.setState(prevState => ({\n        counter: prevState.counter + 1,\n        coinAnimation: true,\n        mysteryBlockAnimation: true,\n        isMysteryBlockActive: true\n      }), this.removeAnimations());\n\n\n    } else {\n      this.setState({ mysteryBlockAnimation: true });\n      setTimeout(() => this.setState({ mysteryBlockAnimation: false }), this.props.animationTimeout);\n    }\n  };\n\n  handleOnDecreaseClick = () => {\n    if (this.state.counter > 0) {\n      this.setState((prevState, props) => ({\n        counter: prevState.counter - 1,\n        isMysteryBlockActive: prevState.counter <= props.limit\n      }));\n      const decrementFX = new Audio(\n        \"https://themushroomkingdom.net/sounds/wav/smw/smw_stomp_bones.wav\"\n      );\n      decrementFX.play();\n    } else {\n      const disabledFX = new Audio(\n        \"https://themushroomkingdom.net/sounds/wav/smw/smw_lemmy_wendy_incorrect.wav\"\n      );\n      disabledFX.play();\n    }\n  };\n\n\n  handleOnButtonClick = event => {\n    const actionMap = {\n      increase: 1,\n      decrease: -1\n    }\n    const actionType = event.target.getAttribute(\"action\");\n\n    this.setState(prevState => ({\n      counter: prevState.counter + actionMap[actionType]\n    }))\n  }\n\n\n  render() {\n    const {\n      counter,\n      coinAnimation,\n      isMysteryBlockActive,\n      mysteryBlockAnimation\n    } = this.state;\n\n    return (\n      <Fragment>\n        <div className=\"row\">\n          <CoinsLabel number={counter} padStart={5} padStr=\"0\" />\n        </div>\n        <div className=\"row App-Mystery-Block-row\">\n          <Coin\n            id=\"main_coin\"\n            defaultStyle\n            animation={coinAnimation}\n            alt=\"Coin\"\n          />\n          <MysteryBlock\n            id=\"mystery_block\"\n            active={isMysteryBlockActive}\n            animation={mysteryBlockAnimation}\n            alt=\"Mystery Block\"\n          />\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4\" />\n          <div className=\"col-2\">\n            <Button action=\"increase\" id=\"increase_button\" onClick={this.handleOnIncreaseClick}>\n              Increase\n            </Button>\n          </div>\n          <div className=\"col-2\">\n            <Button action=\"decrease\" id=\"decrease_button\" onClick={this.handleOnDecreaseClick}>\n              Decrease\n            </Button>\n           \n          </div>\n          <div className=\"col-4\" />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nCounter.propTypes = {\n  limit: PropTypes.number.isRequired,\n  animationTimeout: PropTypes.number\n};\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Header from \"../components/header/Header\";\nimport Counter from \"../components/counter/Counter\";\nimport \"../grid/simple-grid.min.css\";\nimport \"./style.css\";\n\nclass MainContainer extends Component {\n  render() {\n    return (\n      <div className=\"App container\">\n        <div className=\"row\">\n          <Header title=\"React counter\" />\n        </div>\n        <div className=\"row\">\n          <Counter limit={10} animationTimeout={230} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MainContainer;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainContainer from './components/MainContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}