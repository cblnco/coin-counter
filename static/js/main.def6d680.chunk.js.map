{"version":3,"sources":["components/header/logo.svg","components/header/Header.jsx","components/coin/Coin.svg","utils/soundBoard.js","components/coin/Coin.jsx","components/coinsLabel/CoinsLabel.jsx","components/mysteryBlock/ActiveBlock.svg","components/mysteryBlock/InactiveBlock.svg","components/mysteryBlock/MysteryBlock.jsx","components/button/Button.jsx","components/counter/Counter.jsx","utils/constants.js","components/numberField/NumberField.jsx","components/limitHandler/LimitHandler.jsx","components/MainContainer.jsx","serviceWorker.js","index.jsx"],"names":["Header","title","className","src","logo","alt","soundBoard","isSoundEnabled","this","soundSource","Audio","play","playSound","Coin","props","animation","defaultStyle","classNames","cn","playCoin","CoinSVG","defaultProps","CoinsLabel","number","padLength","padString","id","toString","padStart","arePropsEqual","prevProps","nextProps","active","MysteryBlock","onClick","playBlockKick","type","ActiveBlock","InactiveBlock","memo","Button","children","Counter","limit","animationTimeout","useState","counter","setCounter","coinAnimation","setCoinAnimation","isMysteryBlockActive","setIsMysteryBlockActive","mysteryBlockAnimation","setMysteryBlockAnimation","useEffect","setTimeout","handleOnIncreaseClick","playError","playDecrease","MAX","NumberField","value","onChange","onBlur","onDecrease","onIncrease","numberRegex","LimitHandler","setLimit","e","newLimit","target","test","Number","playIncrease","MainContainer","currentLimit","setCurrentLimit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.def6d680.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.927f1d60.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport logo from './logo.svg';\nimport './Header.css';\n\nconst Header = ({ title }) => (\n  <header className=\"App-header\">\n    <img src={logo} className=\"App-logo\" alt=\"React logo\" />\n    <p className=\"App-paragraph\">{title}</p>\n  </header>\n);\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/Coin.ba5d8f5a.svg\";","class SoundFX {\n  #isSoundEnabled;\n\n  #COIN_FX = 'https://themushroomkingdom.net/sounds/wav/smw/smw_coin.wav';\n\n  #ERROR_FX = 'https://themushroomkingdom.net/sounds/wav/smw/smw_lemmy_wendy_incorrect.wav';\n\n  #DECREASE_FX = 'https://themushroomkingdom.net/sounds/wav/smw/smw_stomp_bones.wav';\n\n  #INCREASE_FX = 'https://themushroomkingdom.net/sounds/wav/smw/smw_stomp.wav';\n\n  #BLOCK_KICK_FX = 'https://themushroomkingdom.net/sounds/wav/smw/smw_shell_ricochet.wav';\n\n  constructor(isSoundEnabled) {\n    this.#isSoundEnabled = isSoundEnabled;\n  }\n\n  set isSoundEnabled(isSoundEnabled) {\n    this.#isSoundEnabled = isSoundEnabled;\n  }\n\n  get isSoundEnabled() {\n    return this.#isSoundEnabled;\n  }\n\n  /**\n   * This method should be private (#), but dealing with CRA and babel\n   * plugins, without ejecting CRA, is not worth the effort for this kind\n   * of project.\n   *\n   * No JSDoc this time... at all Â¯\\_(ãƒ„)_/Â¯\n   */\n  playSound(soundSource) {\n    if (this.#isSoundEnabled) {\n      const sound = new Audio(soundSource);\n      sound.play();\n    }\n  }\n\n  playCoin() {\n    this.playSound(this.#COIN_FX);\n  }\n\n  playError() {\n    this.playSound(this.#ERROR_FX);\n  }\n\n  playDecrease() {\n    this.playSound(this.#DECREASE_FX);\n  }\n\n  playIncrease() {\n    this.playSound(this.#INCREASE_FX);\n  }\n\n  playBlockKick() {\n    this.playSound(this.#BLOCK_KICK_FX);\n  }\n}\n\nconst soundBoard = new SoundFX(true);\n\nexport default soundBoard;\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport CoinSVG from './Coin.svg';\nimport soundBoard from '../../utils/soundBoard';\nimport './Coin.css';\n\nconst Coin = (props) => {\n  const { animation, defaultStyle, alt, className } = props;\n  const classNames = cn(\n    { 'App-Coin-animation': animation },\n    { 'App-Coin': defaultStyle },\n    // eslint-disable-next-line comma-dangle\n    className\n  );\n\n  if (animation) {\n    soundBoard.playCoin();\n  }\n\n  return <img className={classNames} src={CoinSVG} alt={alt} />;\n};\n\nCoin.defaultProps = {\n  animation: false,\n  defaultStyle: true,\n  className: '',\n  alt: 'Coin',\n};\n\nCoin.propTypes = {\n  animation: PropTypes.bool,\n  defaultStyle: PropTypes.bool,\n  alt: PropTypes.string,\n  className: PropTypes.string,\n};\n\nexport default Coin;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Coin from '../coin/Coin';\nimport './CoinsLabel.css';\n\nconst CoinsLabel = ({ number, padLength, padString }) => (\n  <div>\n    <Coin id=\"coin_label_svg\" className=\"App-Coin-label\" alt=\"Coin label\" />\n    <span className=\"App-Coin-label-symbol\">&nbsp;ðŸ—™&nbsp;&nbsp;</span>\n    <span className=\"App-Coin-label-text\">{number.toString().padStart(padLength, padString)}</span>\n  </div>\n);\n\nCoinsLabel.defaultProps = {\n  padLength: 4,\n  padString: '0',\n};\n\nCoinsLabel.propTypes = {\n  padLength: PropTypes.number,\n  padString: PropTypes.string,\n  number: PropTypes.number.isRequired,\n};\n\nexport default CoinsLabel;\n","export default __webpack_public_path__ + \"static/media/ActiveBlock.1f117f61.svg\";","export default __webpack_public_path__ + \"static/media/InactiveBlock.d68a21e6.svg\";","import React, { memo } from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport ActiveBlock from './ActiveBlock.svg';\nimport InactiveBlock from './InactiveBlock.svg';\nimport soundBoard from '../../utils/soundBoard';\nimport './MysteryBlock.css';\n\nconst arePropsEqual = (prevProps, nextProps) =>\n  prevProps.animation === nextProps.animation && prevProps.active === nextProps.active;\n\nconst MysteryBlock = ({ id, animation, active, alt, onClick }) => {\n  const classNames = cn('App-Mistery-Block-Btn', { 'margin-top': animation });\n\n  if (animation && active) {\n    soundBoard.playBlockKick();\n  }\n\n  return (\n    <button className={classNames} type=\"button\" onClick={onClick}>\n      <img\n        id={id}\n        className=\"App-Mistery-Block\"\n        src={active ? ActiveBlock : InactiveBlock}\n        alt={alt}\n      />\n    </button>\n  );\n};\n\nMysteryBlock.defaultProps = {\n  id: 'mystery-block',\n  alt: 'Mystery Block',\n  onClick: null,\n};\n\nMysteryBlock.propTypes = {\n  id: PropTypes.string,\n  alt: PropTypes.string,\n  active: PropTypes.bool.isRequired,\n  animation: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default memo(MysteryBlock, arePropsEqual);\n","import React from 'react';\nimport cn from 'classnames';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({ id, className, onClick, children }) => {\n  const classNames = cn('App-button', className);\n  return (\n    <button id={id} className={classNames} type=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  className: '',\n  onClick: null,\n};\n\nButton.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport CoinsLabel from '../coinsLabel/CoinsLabel';\nimport Coin from '../coin/Coin';\nimport MysteryBlock from '../mysteryBlock/MysteryBlock';\nimport soundBoard from '../../utils/soundBoard';\nimport Button from '../button/Button';\nimport './Counter.css';\n\nconst Counter = ({ limit, animationTimeout }) => {\n  const [counter, setCounter] = useState(0);\n  const [coinAnimation, setCoinAnimation] = useState(false);\n  const [isMysteryBlockActive, setIsMysteryBlockActive] = useState(true);\n  const [mysteryBlockAnimation, setMysteryBlockAnimation] = useState(false);\n\n  // Effect to delay the prop update to set the block active or inactive.\n  useEffect(() => {\n    if (counter > limit) {\n      setCounter(limit);\n    }\n\n    setTimeout(() => setIsMysteryBlockActive(counter < limit), animationTimeout);\n  }, [counter, animationTimeout, limit]);\n\n  const removeAnimations = () => {\n    setTimeout(() => {\n      setCoinAnimation(false);\n      setMysteryBlockAnimation(false);\n    }, animationTimeout);\n  };\n\n  const handleOnIncreaseClick = () => {\n    if (counter < limit) {\n      setCounter(counter + 1);\n      setCoinAnimation(true);\n      setMysteryBlockAnimation(true);\n      removeAnimations();\n    } else {\n      soundBoard.playError();\n      setMysteryBlockAnimation(true);\n      setTimeout(() => {\n        setMysteryBlockAnimation(false);\n      }, animationTimeout);\n    }\n  };\n\n  const handleOnDecreaseClick = () => {\n    if (counter > 0) {\n      setCounter(counter - 1);\n      soundBoard.playDecrease();\n    } else {\n      soundBoard.playError();\n    }\n  };\n\n  return (\n    <>\n      <div className=\"row\">\n        <CoinsLabel number={counter} padLength={4} padString=\"0\" />\n      </div>\n      <div className=\"row App-Mystery-Block-row\">\n        <Coin id=\"main_coin\" defaultStyle animation={coinAnimation} alt=\"Coin\" />\n        <MysteryBlock\n          id=\"mystery_block\"\n          active={isMysteryBlockActive}\n          animation={mysteryBlockAnimation}\n          alt=\"Mystery Block\"\n          onClick={handleOnIncreaseClick}\n        />\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4\" />\n        <div className=\"col-2\">\n          <Button id=\"decrease_button\" className=\"decrease-button\" onClick={handleOnDecreaseClick}>\n            Decrease\n          </Button>\n        </div>\n        <div className=\"col-2\">\n          <Button id=\"increase_button\" className=\"increase-button\" onClick={handleOnIncreaseClick}>\n            Increase\n          </Button>\n        </div>\n        <div className=\"col-4\" />\n      </div>\n    </>\n  );\n};\n\nCounter.defaultProps = {\n  animationTimeout: 200,\n};\n\nCounter.propTypes = {\n  limit: PropTypes.number.isRequired,\n  animationTimeout: PropTypes.number,\n};\n\nexport default Counter;\n","// Counter minimum.\nexport const MIN = 1;\n\n// Counter maximum.\nexport const MAX = 9999;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './NumberField.css';\n\nconst NumberField = ({ id, value, onChange, onBlur, onDecrease, onIncrease }) => (\n  <div id={id} className=\"number-field\">\n    <button className=\"number-button left\" type=\"button\" onClick={onDecrease}>\n      -\n    </button>\n    <input className=\"number-input\" value={value} onChange={onChange} onBlur={onBlur} />\n    <button className=\"number-button right\" type=\"button\" onClick={onIncrease}>\n      +\n    </button>\n  </div>\n);\n\nNumberField.defaultProps = {\n  onChange: null,\n  onBlur: null,\n  onDecrease: null,\n  onIncrease: null,\n};\n\nNumberField.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  onDecrease: PropTypes.func,\n  onIncrease: PropTypes.func,\n};\n\nexport default NumberField;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MIN, MAX } from '../../utils/constants';\nimport soundBoard from '../../utils/soundBoard';\nimport NumberField from '../numberField/NumberField';\nimport './LimitHandler.css';\n\nconst numberRegex = /^\\d+$/;\n\nconst LimitHandler = ({ id, limit, setLimit }) => {\n  const onNumberFieldChange = (e) => {\n    const newLimit = e.target.value;\n    setLimit(numberRegex.test(newLimit) ? newLimit : 0);\n  };\n\n  const onNumberFieldBlur = () => {\n    let newLimit = limit;\n\n    if (newLimit && numberRegex.test(newLimit)) {\n      if (newLimit < MIN) {\n        newLimit = MIN;\n      } else if (newLimit > MAX) {\n        newLimit = MAX;\n      } else {\n        newLimit = Number(newLimit);\n      }\n    } else {\n      newLimit = MIN;\n    }\n\n    setLimit(newLimit);\n  };\n\n  const onDecreaseClick = () => {\n    if (limit > MIN) {\n      setLimit(limit - 1);\n      soundBoard.playDecrease();\n    } else {\n      soundBoard.playError();\n    }\n  };\n\n  const onIncreaseClick = () => {\n    if (limit < MAX) {\n      setLimit(limit + 1);\n      soundBoard.playIncrease();\n    } else {\n      soundBoard.playError();\n    }\n  };\n\n  return (\n    <div id={id} className=\"limit-container\">\n      <div className=\"limit-sentence\">Current limit:</div>\n      <NumberField\n        id=\"number_field\"\n        value={limit}\n        onChange={onNumberFieldChange}\n        onBlur={onNumberFieldBlur}\n        onDecrease={onDecreaseClick}\n        onIncrease={onIncreaseClick}\n      />\n    </div>\n  );\n};\n\nLimitHandler.defaultProps = {\n  id: 'number-field',\n};\n\nLimitHandler.propTypes = {\n  id: PropTypes.string,\n  limit: PropTypes.number.isRequired,\n  setLimit: PropTypes.func.isRequired,\n};\n\nexport default LimitHandler;\n","import React, { useState } from 'react';\nimport Header from './header/Header';\nimport Counter from './counter/Counter';\nimport LimitHandler from './limitHandler/LimitHandler';\nimport '../grid/simple-grid.min.css';\nimport './MainContainer.css';\n\nconst MainContainer = () => {\n  const [currentLimit, setCurrentLimit] = useState(20);\n\n  return (\n    <div className=\"App container\">\n      <div className=\"row\">\n        <Header title=\"React Coin Counter\" />\n        <LimitHandler id=\"limit_handler\" limit={Number(currentLimit)} setLimit={setCurrentLimit} />\n      </div>\n      <div className=\"row\">\n        <Counter limit={Number(currentLimit)} animationTimeout={230} />\n      </div>\n    </div>\n  );\n};\n\nexport default MainContainer;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainContainer from './components/MainContainer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainContainer />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}